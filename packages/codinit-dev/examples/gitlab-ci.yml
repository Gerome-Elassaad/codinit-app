# Example GitLab CI configuration for build verification
# Copy this to .gitlab-ci.yml in your project root

stages:
  - build
  - verify
  - deploy

variables:
  NODE_VERSION: "20"
  PNPM_VERSION: "10.0.0"

.install_deps: &install_deps
  - npm install -g pnpm@${PNPM_VERSION}
  - pnpm install

build:
  stage: build
  image: node:${NODE_VERSION}
  before_script:
    - *install_deps
  script:
    # Build verification package
    - cd packages/codinit-dev
    - pnpm build
    - cd ../..

    # Collect build metadata
    - cd packages/codinit-dev
    - node scripts/collect-metadata.js --output ../../build-metadata.json
    - node scripts/collect-metadata.js --embed ../../app/utils/build-info.ts
    - cd ../..

    # Build main application
    - pnpm run build
  artifacts:
    paths:
      - build/
      - build-metadata.json
    expire_in: 30 days
  variables:
    OFFICIAL_BUILD: "true"
    BUILD_SIGNING_SECRET: $BUILD_SIGNING_SECRET

verify:
  stage: verify
  image: node:${NODE_VERSION}
  before_script:
    - *install_deps
  script:
    - cd packages/codinit-dev
    - pnpm build
    - node scripts/verify-build.js --mode warn --verbose --metadata ../../build-metadata.json
  dependencies:
    - build
  variables:
    OFFICIAL_BUILD: "true"
    BUILD_SIGNING_SECRET: $BUILD_SIGNING_SECRET

verify-strict:
  stage: verify
  image: node:${NODE_VERSION}
  before_script:
    - *install_deps
  script:
    - cd packages/codinit-dev
    - pnpm build
    - node scripts/verify-build.js --mode enforce --verbose
  only:
    - tags
  variables:
    OFFICIAL_BUILD: "true"
    BUILD_SIGNING_SECRET: $BUILD_SIGNING_SECRET
